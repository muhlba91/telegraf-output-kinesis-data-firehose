---
name: Verify

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  GO111MODULE: "on"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Plugin
    strategy:
      max-parallel: 4
      matrix:
        go-version: [ 1.21.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Build
        run: make build

  lint:
    runs-on: ubuntu-latest
    name: Lint Plugin
    strategy:
      max-parallel: 4
      matrix:
        go-version: [ 1.21.x ]
        golangci-lint-version: [v1.54.2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: '${{ matrix.golangci-lint-version }}'
          args: -c .golangci.yml
          skip-pkg-cache: true
          skip-build-cache: true

  tests:
    runs-on: ubuntu-latest
    name: Run Tests
    strategy:
      matrix:
        go-version: [ 1.21.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go-version }}'

      - name: Run Tests
        run: make test
        
      - name: Coveralls
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out

  snyk:
    runs-on: ubuntu-latest
    name: Snyk Scanning
    permissions:
      contents: read
      actions: read
      security-events: write
      statuses: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Snyk Monitor
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      - name: Snyk Test
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --fail-on=all --sarif-file-output=snyk.sarif

      - name: Upload Snyk Result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
